{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SigmaFi\\\\Desktop\\\\react-projects\\\\watch-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as React from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst movies = [{\n  title: 'Movie One',\n  type: 'movie',\n  episodes: 1,\n  currentEp: 0,\n  id: 1\n}, {\n  title: 'Series One',\n  type: 'series',\n  episodes: 13,\n  currentEp: 1,\n  id: 2\n}, {\n  title: 'Anime Movie One',\n  type: 'anime-movie',\n  episodes: 1,\n  currentEp: 0,\n  id: 3\n}, {\n  title: 'Anime Series One',\n  type: 'anime-series',\n  episodes: 23,\n  currentEp: 4,\n  id: 4\n}]; //function for using localstorage\n\n/*const useSemiPersistentState = (key, initialState) => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, setValue]);\n};*/\n\nconst Form = _ref => {\n  let {\n    onAddSubmit,\n    onInputChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onAddSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"ftitle\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"ftitle\",\n        name: \"title\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"type\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"type\",\n        id: \"ftype\",\n        onChange: onInputChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"movie\",\n          children: \"movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"anime-movie\",\n          children: \"anime-movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"series\",\n          children: \"series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"anime-series\",\n          children: \"anime-series\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fepisodes\",\n        children: \"Episodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"fepisodes\",\n        name: \"episodes\",\n        min: \"0\",\n        defaultValue: \"1\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"fcurrent\",\n        children: \"Watched episodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"fcurrent\",\n        name: \"currentEp\",\n        min: \"0\",\n        defaultValue: \"0\",\n        onChange: onInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button button-add\",\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_c = Form;\n\nconst List = _ref2 => {\n  let {\n    list,\n    onDeleteItem,\n    onEditItem,\n    onCountUp,\n    onCountDown\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"titleHeader\",\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"typeHeader\",\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"episodesHeader\",\n          children: \"Episodes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 5\n      }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"item\",\n        id: item.id,\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"title\",\n          children: item.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"type\",\n          children: item.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"episodes\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => onCountDown(item.id),\n            style: {\n              color: 'blue',\n              fontSize: '20px',\n              cursor: 'pointer'\n            },\n            children: \"-\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }, this), item.currentEp, \"/\", item.episodes, /*#__PURE__*/_jsxDEV(\"span\", {\n            onClick: () => onCountUp(item.id),\n            style: {\n              color: 'blue',\n              fontSize: '20px',\n              cursor: 'pointer'\n            },\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-edit\",\n            type: \"button\",\n            onClick: () => onEditItem(item),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button button-delete\",\n            type: \"button\",\n            onClick: () => onDeleteItem(item.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = List;\n\nconst App = () => {\n  _s();\n\n  const [movie, setMovie] = React.useState(movies);\n  const [inputs, setInputs] = React.useState({}); //adds to current episode counter\n\n  const episodeCountUp = id => {\n    const newState = movie.map(item => {\n      if (item.id === id && item.currentEp < item.episodes) {\n        item.currentEp++;\n        return item;\n      }\n\n      return item;\n    });\n    setMovie(newState);\n  }; //subtracks from current episode counter\n\n\n  const episodeCountDown = id => {\n    const newState = movie.map(item => {\n      if (item.id === id && item.currentEp > 0) {\n        item.currentEp--;\n        return item;\n      }\n\n      return item;\n    });\n    setMovie(newState);\n    console.log(movie);\n  }; //handles the input in forms\n\n\n  const handleChangeInput = event => {\n    const key = event.target.name;\n    const value = event.target.value;\n    const newId = uuid(); //initial values if empty\n\n    if (!inputs.id) {\n      setInputs(values => ({ ...values,\n        'id': newId\n      }));\n    }\n\n    if (!inputs.type) {\n      inputs.type = 'movie';\n    }\n\n    if (!inputs.currentEp) {\n      inputs.currentEp = 0;\n    }\n\n    if (!inputs.episodes) {\n      inputs.episodes = 1;\n    }\n\n    setInputs(values => ({ ...values,\n      [key]: value\n    }));\n  }; //adds the movie to array object\n\n\n  const handleAddMovie = event => {\n    event.preventDefault(); //check if title already exists and sets found\n\n    const titleCheck = movie.filter(item => {\n      item.title === inputs.title;\n    }); //check if title is empty or it already exists\n\n    if (inputs.title === '' || !inputs.title) {\n      //add a modal!\n      alert('A title is necessary!');\n      return;\n    } else if (titleCheck[0]) {\n      //add a modal!\n      alert('Title already exists');\n      return;\n    } //check if current episodes are exceeding total episodes\n\n\n    if (inputs.currentEp > inputs.episodes) {\n      //add a modal!\n      alert('Watched episodes can\\'t be more than the existing ones!');\n      return;\n    } //check if movie has more than one episode\n\n\n    if ((inputs.type === 'movie' || inputs.type === 'anime-movie') && inputs.episodes > 1) {\n      //add a modal\n      alert('Movies don\\'t have episodes');\n      inputs.episodes = 1;\n    }\n\n    setMovie([...movie, inputs]); //clears form inputs and resets the object\n\n    event.target.reset();\n    setInputs({});\n  }; //remove a movie\n\n\n  const handleRemoveMovie = id => {\n    const item = movie.filter(movie => movie.id !== id);\n    setMovie(item);\n  };\n\n  const handleEditMovie = item => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Form, {\n      onAddSubmit: handleAddMovie,\n      onInputChange: handleChangeInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      onCountDown: episodeCountDown,\n      onCountUp: episodeCountUp,\n      onAddItem: handleAddMovie,\n      onEditItem: handleEditMovie,\n      onDeleteItem: handleRemoveMovie,\n      list: movie\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"WIWLVOt1MQctiW8Rpj6bFQoyj1U=\");\n\n_c3 = App;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Form\");\n$RefreshReg$(_c2, \"List\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","v4","uuid","movies","title","type","episodes","currentEp","id","Form","onAddSubmit","onInputChange","List","list","onDeleteItem","onEditItem","onCountUp","onCountDown","map","item","color","fontSize","cursor","App","movie","setMovie","useState","inputs","setInputs","episodeCountUp","newState","episodeCountDown","console","log","handleChangeInput","event","key","target","name","value","newId","values","handleAddMovie","preventDefault","titleCheck","filter","alert","reset","handleRemoveMovie","handleEditMovie"],"sources":["C:/Users/SigmaFi/Desktop/react-projects/watch-list/src/App.js"],"sourcesContent":["import './App.css';\nimport * as React from 'react';\nimport { v4 as uuid } from 'uuid';\n\nconst movies = [\n  {\n    title: 'Movie One',\n    type: 'movie',\n    episodes: 1,\n    currentEp: 0,\n    id: 1,\n  },\n  {\n    title: 'Series One',\n    type: 'series',\n    episodes: 13,\n    currentEp: 1,\n    id: 2,\n  },\n  {\n    title: 'Anime Movie One',\n    type: 'anime-movie',\n    episodes: 1,\n    currentEp: 0,\n    id: 3,\n  },\n  {\n    title: 'Anime Series One',\n    type: 'anime-series',\n    episodes: 23,\n    currentEp: 4,\n    id: 4,\n  },\n];\n\n//function for using localstorage\n/*const useSemiPersistentState = (key, initialState) => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n\n  React.useEffect(() => {\n    localStorage.setItem(key, value);\n  }, [value, setValue]);\n};*/\n\nconst Form = ({ onAddSubmit, onInputChange }) => (\n  <>\n  <form onSubmit={onAddSubmit}>\n    <label htmlFor=\"ftitle\">Title</label>\n    <input type=\"text\" id=\"ftitle\" name=\"title\" onChange={onInputChange} />\n    <br />\n    <label htmlFor=\"type\">Type</label>\n    <select name=\"type\" id=\"ftype\" onChange={onInputChange}>\n      <option value=\"movie\">movie</option>\n      <option value=\"anime-movie\">anime-movie</option>\n      <option value=\"series\">series</option>\n      <option value=\"anime-series\">anime-series</option>\n    </select>\n    <br />\n    <label htmlFor=\"fepisodes\">Episodes</label>\n    <input type=\"number\" id=\"fepisodes\" name=\"episodes\" min=\"0\" defaultValue=\"1\" onChange={onInputChange} />\n    <br />\n    <label htmlFor=\"fcurrent\">Watched episodes</label>\n    <input type=\"number\" id=\"fcurrent\" name=\"currentEp\" min=\"0\" defaultValue=\"0\" onChange={onInputChange} />\n    <br />\n    <button className=\"button button-add\" type=\"submit\">Add</button>\n    <br />\n  </form>\n  \n  </>\n);\n\nconst List = ({ list, onDeleteItem, onEditItem, onCountUp, onCountDown }) => (\n  <>\n  <ul>\n    <li className=\"item\">\n      <span className=\"titleHeader\">Title</span>\n      <span className=\"typeHeader\">Type</span>\n      <span className=\"episodesHeader\">Episodes</span>\n    </li>\n    {list.map((item) => (\n      <li key={item.id} className=\"item\" id={item.id}>\n        <span className=\"title\">{item.title}</span>\n        <span className=\"type\">{item.type}</span>\n        <span className=\"episodes\">\n          <span onClick={() => onCountDown(item.id)} style={{color: 'blue', fontSize: '20px', cursor: 'pointer'}}>-</span>\n          {item.currentEp}/{item.episodes}\n          <span onClick={() => onCountUp(item.id)} style={{color: 'blue', fontSize: '20px', cursor: 'pointer'}}>+</span>\n        </span>\n        <span>\n          <button className=\"button button-edit\" type=\"button\" onClick={() => onEditItem(item)}>Edit</button>\n        </span>\n        <span>\n          <button className=\"button button-delete\" type=\"button\" onClick={() => onDeleteItem(item.id)}>Delete</button>\n        </span>\n      </li>\n    ))}\n  </ul>\n  </>\n);\n\nconst App = () => {\n\n  const [movie, setMovie] = React.useState(movies);\n  const [inputs, setInputs] = React.useState({});\n\n  //adds to current episode counter\n  const episodeCountUp = (id) => {\n\n    const newState = movie.map(item => {\n      if (item.id === id && item.currentEp < item.episodes) {\n        item.currentEp++;\n        return item;\n      }\n      return item;\n    });\n    \n    setMovie(newState);\n  };\n\n  //subtracks from current episode counter\n  const episodeCountDown = (id) => {\n\n    const newState = movie.map(item => {\n      if (item.id === id && item.currentEp > 0) {\n        item.currentEp--;\n        return item;\n      }\n      return item;\n    });\n\n    setMovie(newState);\n\n    console.log(movie);\n  };\n\n  //handles the input in forms\n  const handleChangeInput = (event) => {\n    const key = event.target.name;\n    const value = event.target.value;\n    const newId = uuid();\n\n    //initial values if empty\n    if (!inputs.id) {\n      setInputs(values => ({...values, 'id': newId}));\n    }\n\n    if (!inputs.type) {\n      inputs.type = 'movie';\n    }\n\n    if (!inputs.currentEp) {\n      inputs.currentEp = 0;\n    }\n\n    if (!inputs.episodes) {\n      inputs.episodes = 1;\n    }\n\n    setInputs(values => ({...values, [key]: value}));\n  };\n\n  //adds the movie to array object\n  const handleAddMovie= (event) => {\n    event.preventDefault();\n     //check if title already exists and sets found\n     const titleCheck = movie.filter(item => {\n      item.title === inputs.title;\n    });\n    //check if title is empty or it already exists\n    if (inputs.title === '' || !inputs.title) {\n      //add a modal!\n      alert('A title is necessary!');\n      return;\n    }\n    else if (titleCheck[0]) {\n      //add a modal!\n      alert('Title already exists');\n      return;\n    }\n    //check if current episodes are exceeding total episodes\n    if (inputs.currentEp > inputs.episodes) {\n      //add a modal!\n      alert('Watched episodes can\\'t be more than the existing ones!');\n      return;\n    }\n    //check if movie has more than one episode\n    if ((inputs.type === 'movie' || inputs.type === 'anime-movie') && inputs.episodes > 1) {\n      //add a modal\n      alert('Movies don\\'t have episodes');\n      inputs.episodes = 1;\n    }\n\n    setMovie([...movie, inputs]);\n    //clears form inputs and resets the object\n    event.target.reset();\n    setInputs({});\n  };\n\n  //remove a movie\n  const handleRemoveMovie = (id) => {\n\n    const item = movie.filter(movie => movie.id !== id);\n    \n    setMovie(item);\n  };\n\n  const handleEditMovie = (item) => {\n\n  };\n\n  return (\n    <>\n      <Form\n        onAddSubmit={handleAddMovie}\n        onInputChange={handleChangeInput}\n      ></Form>\n      <List \n        onCountDown={episodeCountDown} \n        onCountUp={episodeCountUp} \n        onAddItem={handleAddMovie} \n        onEditItem={handleEditMovie} \n        onDeleteItem={handleRemoveMovie} \n        list={movie}>\n      </List>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}