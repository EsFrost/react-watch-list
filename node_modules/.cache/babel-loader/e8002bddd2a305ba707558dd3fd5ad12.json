{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SigmaFi\\\\Desktop\\\\react-projects\\\\watch-list\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport * as React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst movies = [{\n  title: 'Movie One',\n  type: 'movie',\n  episodes: 1,\n  currentEp: 0,\n  id: 1\n}, {\n  title: 'Series One',\n  type: 'series',\n  episodes: 13,\n  currentEp: 1,\n  id: 2\n}]; //function for using localstorage\n\nconst useSemiPersistentState = (key, initialState) => {\n  _s();\n\n  const [value, setValue] = React.useState(localStorage.getItem(key) || initialState);\n};\n\n_s(useSemiPersistentState, \"t+P67Y3vGtOeB2DIBJKpw0FB0B0=\");\n\nconst List = _ref => {\n  let {\n    list\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: [/*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"titleHeader\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"typeHeader\",\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"episodesHeader\",\n        children: \"Episodes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), list.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"title\",\n        children: item.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"type\",\n        children: item.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"episodes\",\n        children: [item.currentEp, \"/\", item.episodes]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 3\n  }, this);\n};\n\n_c = List;\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(List, {\n      list: movies\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"List\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","movies","title","type","episodes","currentEp","id","useSemiPersistentState","key","initialState","value","setValue","useState","localStorage","getItem","List","list","map","item","App"],"sources":["C:/Users/SigmaFi/Desktop/react-projects/watch-list/src/App.js"],"sourcesContent":["import './App.css';\nimport * as React from 'react';\n\nconst movies = [\n  {\n    title: 'Movie One',\n    type: 'movie',\n    episodes: 1,\n    currentEp: 0,\n    id: 1,\n  },\n  {\n    title: 'Series One',\n    type: 'series',\n    episodes: 13,\n    currentEp: 1,\n    id: 2,\n  },\n];\n\n//function for using localstorage\nconst useSemiPersistentState = (key, initialState) => {\n  const [value, setValue] = React.useState(\n    localStorage.getItem(key) || initialState\n  );\n};\n\nconst List = ({ list }) => (\n  <ul>\n    <li className=\"item\">\n    <span className=\"titleHeader\">Title</span>\n    <span className=\"typeHeader\">Type</span>\n    <span className=\"episodesHeader\">Episodes</span>\n    </li>\n    {list.map((item) => (\n      <li key={item.id} className=\"item\">\n        <span className=\"title\">{item.title}</span>\n        <span className=\"type\">{item.type}</span>\n        <span className=\"episodes\">{item.currentEp}/{item.episodes}</span>\n      </li>\n    ))}\n  </ul>\n);\n\nconst App = () => {\n\n  return (\n    <>\n      <List list={movies}></List>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAEA,MAAMC,MAAM,GAAG,CACb;EACEC,KAAK,EAAE,WADT;EAEEC,IAAI,EAAE,OAFR;EAGEC,QAAQ,EAAE,CAHZ;EAIEC,SAAS,EAAE,CAJb;EAKEC,EAAE,EAAE;AALN,CADa,EAQb;EACEJ,KAAK,EAAE,YADT;EAEEC,IAAI,EAAE,QAFR;EAGEC,QAAQ,EAAE,EAHZ;EAIEC,SAAS,EAAE,CAJb;EAKEC,EAAE,EAAE;AALN,CARa,CAAf,C,CAiBA;;AACA,MAAMC,sBAAsB,GAAG,CAACC,GAAD,EAAMC,YAAN,KAAuB;EAAA;;EACpD,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,KAAK,CAACY,QAAN,CACxBC,YAAY,CAACC,OAAb,CAAqBN,GAArB,KAA6BC,YADL,CAA1B;AAGD,CAJD;;GAAMF,sB;;AAMN,MAAMQ,IAAI,GAAG;EAAA,IAAC;IAAEC;EAAF,CAAD;EAAA,oBACX;IAAA,wBACE;MAAI,SAAS,EAAC,MAAd;MAAA,wBACA;QAAM,SAAS,EAAC,aAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADA,eAEA;QAAM,SAAS,EAAC,YAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFA,eAGA;QAAM,SAAS,EAAC,gBAAhB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAHA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAMGA,IAAI,CAACC,GAAL,CAAUC,IAAD,iBACR;MAAkB,SAAS,EAAC,MAA5B;MAAA,wBACE;QAAM,SAAS,EAAC,OAAhB;QAAA,UAAyBA,IAAI,CAAChB;MAA9B;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAM,SAAS,EAAC,MAAhB;QAAA,UAAwBgB,IAAI,CAACf;MAA7B;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAM,SAAS,EAAC,UAAhB;QAAA,WAA4Be,IAAI,CAACb,SAAjC,OAA6Ca,IAAI,CAACd,QAAlD;MAAA;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA,GAASc,IAAI,CAACZ,EAAd;MAAA;MAAA;MAAA;IAAA,QADD,CANH;EAAA;IAAA;IAAA;IAAA;EAAA,QADW;AAAA,CAAb;;KAAMS,I;;AAiBN,MAAMI,GAAG,GAAG,MAAM;EAEhB,oBACE;IAAA,uBACE,QAAC,IAAD;MAAM,IAAI,EAAElB;IAAZ;MAAA;MAAA;MAAA;IAAA;EADF,iBADF;AAKD,CAPD;;MAAMkB,G;AASN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}